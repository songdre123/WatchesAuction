version: "3.8"

volumes:
  rabbitmq_data:

services:
 
  ###################################
  # Notification: The Notification microservice
  ###################################
  notification:
    build:
      context: ./
      dockerfile: notification.dockerfile
    image: wangkaijie2001/notification:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/Notification
      PYTHONUNBUFFERED: 1

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json
      - rabbitmq_data:/var/lib/rabbitmq

  ###################################
  # User: The User microservice
  ###################################
  user:
    build:
      context: ./
      dockerfile: user.dockerfile
    image: wangkaijie2001/user:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/User
      PYTHONUNBUFFERED: 1

  ###################################
  # Auction: The Auction microservice
  ###################################
  auction:
    build:
      context: ./
      dockerfile: auction.dockerfile
    image: wangkaijie2001/auction:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/Auction
      PYTHONUNBUFFERED: 1

  ###################################
  # Bid: The Auction microservice
  ###################################
  bids:
    build:
      context: ./
      dockerfile: bids.dockerfile
    image: wangkaijie2001/bids:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/Bids
      PYTHONUNBUFFERED: 1

  ###################################
  # Schedule: The Schedule microservice
  ###################################
  schedule:
    build:
      context: ./
      dockerfile: schedule.dockerfile
    image: wangkaijie2001/schedule:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/schedule
      PYTHONUNBUFFERED: 1


  #################################################
  # NotificationAMQP: The NotificationAMQP microservice (complex)
  #################################################
  notificationAMQP:
    build:
      context: ./
      dockerfile: notificationAMQP.dockerfile
    image: wangkaijie2001/notificationAMQP:esd
    restart: always
    depends_on:
      - rabbitmq
      - user
      - auction
      - notification
      - schedule
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      a_queue_name: Notification
      PYTHONUNBUFFERED: 1








  #use this for complex microservice
  ###############################################
  # Place Order: The Place Order microservice
  ###############################################
  place_order:
    build:
      context: ./
      dockerfile: place_order.dockerfile
    image: wangkaijie2001/place_order:esd
    restart: always
    depends_on:
      - order
      - shipping_record
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5001/order
      shipping_record_URL: http://shipping_record:5002/shipping_record 
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  ##################################
  # Book: The Book microservice
  ##################################
  book:
    build:
      context: ./
      dockerfile: book.dockerfile
    image: wangkaijie2001/book:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/book
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"
